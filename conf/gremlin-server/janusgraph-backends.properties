#
# Copyright 2014-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
# http://aws.amazon.com/apache2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.
#

gremlin.graph=org.janusgraph.core.JanusGraphFactory
#metrics.enabled=true
#metrics.prefix=j
#metrics.csv.interval=1000
#metrics.csv.directory=metrics

# Turn off JanusGraph retries as we batch and have our own exponential backoff strategy.
storage.write-time=1 ms
storage.read-time=1 ms

storage.backend=com.amazon.janusgraph.diskstorage.dynamodb.DynamoDBStoreManager
storage.dynamodb.client.credentials.class-name=com.amazonaws.auth.BasicAWSCredentials
storage.dynamodb.client.credentials.constructor-args=access,secret
storage.dynamodb.client.signing-region=us-east-1

storage.dynamodb.client.endpoint=http://dynamodb:8000

storage.dynamodb.stores.edgestore.initial-capacity-read=12
storage.dynamodb.stores.edgestore.initial-capacity-write=12
storage.dynamodb.stores.edgestore.read-rate=1000
storage.dynamodb.stores.edgestore.write-rate=1000

storage.dynamodb.stores.graphindex.initial-capacity-read=9
storage.dynamodb.stores.graphindex.initial-capacity-write=9
storage.dynamodb.stores.graphindex.read-rate=1000
storage.dynamodb.stores.graphindex.write-rate=1000

storage.dynamodb.stores.systemlog.initial-capacity-read=1
storage.dynamodb.stores.systemlog.initial-capacity-write=1
storage.dynamodb.stores.systemlog.read-rate=1
storage.dynamodb.stores.systemlog.write-rate=1

storage.dynamodb.stores.janusgraph_ids.initial-capacity-read=1
storage.dynamodb.stores.janusgraph_ids.initial-capacity-write=1
storage.dynamodb.stores.janusgraph_ids.read-rate=1
storage.dynamodb.stores.janusgraph_ids.write-rate=1

storage.dynamodb.stores.system_properties.initial-capacity-read=1
storage.dynamodb.stores.system_properties.initial-capacity-write=1
storage.dynamodb.stores.system_properties.read-rate=1
storage.dynamodb.stores.system_properties.write-rate=1

storage.dynamodb.stores.txlog.initial-capacity-read=1
storage.dynamodb.stores.txlog.initial-capacity-write=1
storage.dynamodb.stores.txlog.read-rate=1
storage.dynamodb.stores.txlog.write-rate=1

# The indexing backend used to extend and optimize JanusGraph's query
# functionality. This setting is optional.  JanusGraph can use multiple
# heterogeneous index backends.  Hence, this option can appear more than
# once, so long as the user-defined name between "index" and "backend" is
# unique among appearances.Similar to the storage backend, this should be
# set to one of JanusGraph's built-in shorthand names for its standard
# index backends (shorthands: lucene, elasticsearch, es, solr) or to the
# full package and classname of a custom/third-party IndexProvider
# implementation.
#
# Default:    elasticsearch
# Data Type:  String
# Mutability: GLOBAL_OFFLINE
#
# Settings with mutability GLOBAL_OFFLINE are centrally managed in
# JanusGraph's storage backend.  After starting the database for the first
# time, this file's copy of this setting is ignored.  Use JanusGraph's
# Management System to read or modify this value after bootstrapping.
index.search.backend=elasticsearch

# The hostname or comma-separated list of hostnames of index backend
# servers.  This is only applicable to some index backends, such as
# elasticsearch and solr.
#
# Default:    127.0.0.1
# Data Type:  class java.lang.String[]
# Mutability: MASKABLE
index.search.hostname=elasticsearch:9200
index.search.elasticsearch.client-only=true
index.search.elasticsearch.interface=REST_CLIENT
index.search.backend=elasticsearch
index.search.elasticsearch.create.ext.number_of_shards=60
index.search.elasticsearch.create.ext.number_of_replicas=3
index.search.elasticsearch.create.ext.shard.check_on_startup=true
index.search.elasticsearch.create.ext.refresh_interval=15s
index.search.elasticsearch.interface=REST_CLIENT
index.search.port=9200
#index.search.elasticsearch.ssl.enabled=true
#index.search.elasticsearch.ssl.truststore.location=/etc/pki/java/truststore.jks
#index.search.elasticsearch.ssl.truststore.password=
#index.search.elasticsearch.ssl.keystore.location=/etc/pki/java/keystore.jks
#index.search.elasticsearch.ssl.keystore.keypassword=
#index.search.elasticsearch.ssl.keystore.storepassword=
#index.search.elasticsearch.http.auth.type=basic
#index.search.elasticsearch.http.auth.basic.username=estest
#index.search.elasticsearch.http.auth.basic.password=espwd

# OR....
#index.search.elasticsearch.http.auth.type=custom
#index.search.elasticsearch.http.auth.custom.authenticator-class=xx.xxx.xxx
#index.search.elasticsearch.http.auth.custom.authenticator-args='aaa,bb,ccc'

index.search.index-name=janusgraphdefault

# This option determines whether JanusGraph should throw an exception if a graph query
# cannot be answered using an index. Doing solimits the functionality of JanusGraphâ€™s
# graph queries but ensures that slow graph queries are avoided on large graphs.
# Recommended for production use of JanusGraph.
query.force-index=true

#graph.replace-instance-if-exists=true